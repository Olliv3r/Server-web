#!/usr/bin/env bash
#
# server-web - Gerencia servidor web no linux termux
# Obs.: Usa o apachectl e httpd como base para o gerenciamento
#       dos serviços
#
# Site      : http://programadorboard.epizy.com/autor
# Autor     : Oliver Silva <programadorboard@gmail.com>
# Munutençâo: Oliver Silva <programadorboard@gmail.com>
#
# ----------------------------------------------------
# Este programa recebe como parâmetro uma opção e ativa
# uma ação: mostrar status, ativar ou desativar serviço
# e retornando o resultado na saída padrão (STDOUT).
#
# Exemplo:
#
#   $ ./server-web --version
#   server-web versão 1.4
#
#   $ ./server-web --start
#   [*] Servidor Web iniciando...OK
#
#   $ ./server-web --status
#   [+] Apache OK
#   [+] MariaDB Ok
#
#   $ ./server-web --stop
#   [+] Servidor Web encerrando...OK
#
#   $ ./server-web --start --verbose
#   [*] Servidor Web iniciando...OK
#   [+] Htdocs padrão: http://localhost:8080
#   [+] Htdocs redirecionado: https://localhost:8443
#   [+] PhpMyAdmin: https://localhost:8443/phpmyadmin
#
#   $ ./server-web --apache-start --verbose
#   [+] Iniciando Apache...OK
#   [+] Htdocs padrão: http://localhost:8080
#   [+] Htdocs redirecionado: https://localhost:8443
#
#
# Histórico:
#
# v1.0 2022-11-10, Oliver Silva:
#     - Versão inicial iniciando ou encerrando servidor web
# v1.1 2023-01-05, Oliver Silva:
#     - Adicionada verificação de status de serviços ativos ou inativos
# v1.2 2022-02-02, Oliver Silva:
#     - Adicionada verificação de requisitos
# v1.3 2023-02-01, Oliver Silva:
#     - Adicionada funçôes para iniciar, reiniciar e parar o servidor apache
# v1.4 2023-02-03, Oliver Silva:
#     - Adicionada suporte ao modo verbose
#
#
# Licença: MIT License
#
# Versão 1: Adicionada suporte as opçôes --start e --stop
#           para iniciar ou encerrar serviços apache,mysqld_safe e mariadb
#
# Versão 1.1: Adicionada suporte a opção --status para
#           verificar estado de serviços
#
# Versão 1.2: Adicionada suporte a verificação de requisitos
# Versão 1.3: Adicionada suporte as opçôes --apache-start
#	      apache-stop e apache-restart
# Versão 1.4: Adicionada suporte a opção --verbose
#

### VARIÁVEIS ###

# Chaves de ativação das funcionalidades

serviceStatusKey=0	# Chave desligada
serviceStartKey=0	# Chave desligada
serviceStopKey=0	# Chave desligada
apacheStartKey=0  	# Chave desligada
apacheStopKey=0		# Chave desligada
apacheRestartKey=0	# Chave desligada
verboseKey=0		# Chave desligada

# Processos
apache=$(ps -e | grep -o "httpd")
mysqld_safe=$(ps -e | grep -o "mysqld_safe")
mariadb=$(ps -e | grep -o "mariadbd")

reqList=("mariadb" "httpd")

host="localhost"
ports=("8080" "8443")

# Ajuda
helper() {
    echo -e "Uso: $(basename "$0") [OPÇÔES]
Opçôes:
    -h, --help\t\tMostra esta tela de ajuda e sai
    -v, --version\tMostra a versão mais recente do programa
    --status\t\tVerifica status dos serviços
    --start\t\tInicia serviços Apache e MariaDB
    --stop\t\tEncerra serviços Apache e MariaDB
    --apache-start\tInicia o servidor Apache
    --apache-stop\tEncerra o servidor Apache
    --apache-restart\tReinicia o servidor Apache
    -V, --verbose\tMostra informaçôes para acessar os serviços"
    exit 0
}

### FUNCIONALIDADES ###

# Banner
banner() {
	echo -e "\e[34;1m
█▀▀ █▀▀ █▀▀█ ▀█░█▀ █▀▀ █▀▀█ 　 █░░░█ █▀▀ █▀▀▄ 
▀▀█ █▀▀ █▄▄▀ ░█▄█░ █▀▀ █▄▄▀ 　 █▄█▄█ █▀▀ █▀▀▄ 
▀▀▀ ▀▀▀ ▀░▀▀ ░░▀░░ ▀▀▀ ▀░▀▀ 　 ░▀░▀░ ▀▀▀ ▀▀▀░ 
\n
\e[32;2;3m$(version | tr A-Z a-z)\e[0m
"
}

packageCheck() {
    if [ ! -f $PREFIX/bin/${1} ] ; then
	echo -e "\e[33;1m[!] $1 não está instalado\e[0m"
    fi
}

reqCheck() {
    for package in ${reqList[*]} ; do
	packageCheck $package
    done
}

# Extrai a versão diretamente do cabeçalho
version() {
    echo -n "$(basename "$0")"
    grep "^# Versão" "$0" | tail -1 | cut -d : -f 1 | tr -d \# | tr A-Z a-z
    exit 0
}

# Função para iniciar, reiniciar e parar o serviço apache
apache() {
    if [ -n "$1" ] ; then
	if [ "$1" == "start" ] ; then
	    printf "\r\e[0m\e[34;1m[*] Apache starging...\e[0m"
	    apachectl -k "$1" > /dev/null 3>&2
	    printf "\r\e[0m\e[34;1m[+] Apache starting...OK\n\e[0m"

	elif [ "$1" == "stop" ] ; then
	    printf "\r\e[0m\e[34;1m[*] Apache stopping...\e[0m"
	    apachectl -k "$1" > /dev/null 3>&2
	    printf "\r\e[0m\e[34;1m[+] Apache stopping...OK\n\e[0m"

	else
	    printf "\r\e[0m\e[34;1m[*] Apache restarting...\e[0m"
	    apachectl -k "$1" > /dev/null 3>&2
	    printf "\r\e[0m\e[34;1m[+] Apache restarting...OK\n\e[0m"

	fi
    
    else
	echo -e "[!] Expecifique a ação para o Apache"
	exit 1
    fi
}

# Função para encerrar o serviço MariaDB
mysql() {
    if [ -n "$1" ] ; then
	if [ "$1" == "start" ] ; then
	    printf "\r\e[0m\e[34;1m[*] MySQL starting...\e[0m"
	    mysqld_safe -u root > /dev/null 3>&2 &
	    printf "\r\e[0m\e[34;1m[+] MySQL starting...OK\n\e[0m"

        else
	    printf "\r\e[0m\e[34;1m[*] MySQL stopping...\e[0m"
	    pkill mariadb > /dev/null 3>&2
	    printf "\r\e[0m\e[34;1m[+] MySQL stopping...OK\n\e[0m"

	fi

    else
	echo -e "[!] Expecifique a ação para o MySQL"
	exit 1
    fi
}

# Informaçôes de acesso ao host
apacheVerbose() {
    echo -e "\e[0m\e[34;1m[+] Default Access: \e[32;2mhttp://${host}:${ports[0]}\e[0m"
    sleep 0.1
    echo -e "\e[0m\e[34;1m[+] Redirected Access: \e[32;2mhttps://${host}:${ports[1]}\e[0m"
}
phpmyadminVerbose() {
    echo -e "\e[0m\e[34;1m[+] Phpmyadmin Access: \e[32;2mhttps://${host}:${ports[1]}/phpmyadmin\e[0m"
}

# Inicia servidor web
start() {
    if [ -n "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
        statusVerify
	exit 0

    elif [ -n "$apache" -a -z "$mysqld_safe" -a -z "$mariadb" ] ; then
	apache "restart"
	mysql "start"

    elif [ -z "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	apache "start"
	mysql "stop" > /dev/null 2>&1
	mysql "start"

    else
        apache "start"
        mysql "start"
    fi
}

# Encerra os serviços
stop() {
    if [ -n "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	apache "stop"
	mysql "stop"

    elif [ -n "$apache" -a -z "$mysqld_safe" -a -z "$mariadb" ] ; then
	apache "stop"
	echo -e "\e[0m\e[33;1m[!] MySQL is already stopped\e[0m"

    elif [ -z "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
        echo -e "\e[0m\e[33;1m[!] Apache is already stopped\e[0m"
	mysql "stop"

    else
        statusVerify
    fi
}

# Verifica o status dos serviços Apache e MySQL
statusVerify() {
    if [ -n "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	echo -e "\e[0m\e[33;1m[+] Apache is running\e[0m"
	echo -e "\e[0m\e[33;1m[+] MySQL is running\e[0m"

    elif [ -n "$apache" -a -z "$mysqld_safe" -a -z "$mariadb" ] ; then
	echo -e "\e[0m\e[34;1m[+] Apache is running\e[0m"
	echo -e "\e[0m\e[33;1m[!] MySQL is not running\e[0m"

    elif [ -z "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	echo -e "\e[0m\e[33;1m[!] Apache is not running\e[0m"
	echo -e "\e[0m\e[34;1m[+] MySQL is running\e[0m"

    else
	echo -e "\e[0m\e[33;1m[!] Apache is not running\e[0m"
	echo -e "\e[0m\e[33;1m[!] MySQL is not running\e[0m"
    fi
}

# Inicia o servidor apache
apacheStart() {
    if [ -n "$apache" ] ; then
	echo -e "\e[33m[!] Apache is already running\e[0m"
	exit 1
    else
        apache "start"
    fi
}

# Encerra o servidor apache
apacheStop() {
    if [ -z "$apache" ] ; then
	echo -e "\e[33m[!] Apache is already stopped\e[0m"
    else
	
        apache "stop"
    fi
}

# Reinicia o servidor apache
apacheRestart() {
    if [ -z "$apache" ] ; then
	echo -e "\e[0m\e[33;1m[!] Apache is not running, try starting it\e[0m"
    else
	apache "restart"
    fi
}

### TRATAMENTO DAS OPÇÔES

test -n "$1" && reqCheck
test -z "$1" && banner && echo -e "\n\e[0m[\e[33m!\e[0m] Parâmetro necessário, tente --help\e[0m" && exit 1

# Tratando opçôes
while test -n "$1" ; do
    case "$1" in
	-h | --help)
	    helper;;
	-v | --version)
	    version;;
	--status)
	    serviceStatusKey=1;;
	--start)
	    serviceStartKey=1;;
	--stop)
	    serviceStopKey=1;;
        --apache-start)
	    apacheStartKey=1;;
        --apache-stop)
	    apacheStopKey=1;;
        --apache-restart)
	    apacheRestartKey=1;;
	-V | --verbose)
	    verboseKey=1;;
	*)
	    echo -e "\e[0m[\e[33m!\e[0m] Opção inválida: tente $(basename "$0") --help"
	    exit 1;;
    esac
    shift
done

### EXECUÇÃO ###

# Verificando chaves se estão ativas

if [ $serviceStatusKey -eq 1 ] ; then
    statusVerify
    exit 0

elif [ $serviceStartKey -eq 1 -a $verboseKey -eq 0 ] ; then
    start
    exit 0

elif [ $serviceStartKey -eq 1 -a $verboseKey -eq 1 ] ; then
    start
    apacheVerbose
    phpmyadminVerbose
    exit 0

elif [ $serviceStopKey -eq 1 ] ; then
    stop
    exit 0

elif [ $apacheStartKey -eq 1 -a $verboseKey -eq 1 ] ; then
    apacheStart
    apacheVerbose
    exit 0
    
elif [ $apacheStartKey -eq 1 -a $verboseKey -eq 0 ] ; then
    apacheStart
    exit 0

elif [ $apacheStopKey -eq 1 ] ; then
    apacheStop
    exit 0

elif [ $apacheRestartKey -eq 1 ] ; then
    apacheRestart
    exit 0

else
    echo -e "[!] Não é possível processar o comando"
    exit 1
fi
